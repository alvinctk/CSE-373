    /* Constructor to balance AVL Tree with single rotation
     * @param node k2 to be re-balance (Object)
     * @behavior Rotate binary tree node with left child
     *           Update heights.
     * @return the new root of the subtree
     */
	/*@author [author name] - identifies author(s) of a class or interface.
	@version [version] - version info of a class or interface.
	@param [argument name] [argument description] - describes an argument of method or constructor.
	@return [description of return] - describes data returned by method (unnecessary for constructors and void methods).
	@exception [exception thrown] [exception description] - describes exception thrown by method.
	@throws [exception thrown] [exception description] - same as @exception.
	*/ 
	
		//ISOMORPHISM: {(1,2),(2,3),(3,4)}
	public void printTest () {

			System.out.print("\nTest: {");
			for (int i = 0; i < curIndexPtr ; i++){
				
				System.out.print("(");
				System.out.print(mapping[0][i] +1);
				System.out.print(","); 
				System.out.print(mapping[1][i] +1);
				System.out.print(")");
				
				if (i != curIndexPtr){ // at the end
					System.out.print(","); 
				}
			}
			System.out.print("}\n");
	}